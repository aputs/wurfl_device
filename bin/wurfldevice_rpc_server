#!/usr/bin/env ruby

$LOAD_PATH.unshift(File.expand_path('../lib', File.dirname(__FILE__)))

require 'optparse'
require 'daemons'
require 'wurfl_device'
require 'msgpack/rpc'

$rpc_socket = File.join(ENV['HOME'], 'var', 'run', 'wurfldevice_rpc_server.sock')
$socket_only = false
$rpc_host = '0.0.0.0'
$rpc_port = 8090
$state_dir = File.join(ENV['HOME'], 'var', 'run')
$log_dir = File.join(ENV['HOME'], 'log')

args = OptionParser.new do |opts|
  opts.on("-s", "--socket=PATH", "set socket file to to PATH (default: #{$rpc_socket})") do |t|
    $rpc_socket = t
  end
  opts.on("-t", "--socket-only", "listen using socket only (default: #{$socket_only})") do |t|
    $socket_only = t
  end
  opts.on("-o", "--host=HOST", "listen on HOST (default: #{$rpc_host})") do |t|
    $rpc_host = t
  end
  opts.on("-p", "--port=PORT", "set port to PORT (default: #{$rpc_port})") do |t|
    $rpc_port = t
  end
  opts.on("-d", "--data=DIR", "set data dir to DIR (default: #{$state_dir})") do |t|
    $state_dir = t
  end
  opts.on("-l", "--log=DIR", "set log dir to DIR (default: #{$log_dir})") do |t|
    $log_dir = t
  end
end

args.parse

daemon_options = {
  :backtrace => true,
  :log_output => true,
  :monitor => true,
  :multiple => false,
}

class Daemons::Controller
  def setup_options
    @options[:dir] = $state_dir
    @options[:log_dir] = $log_dir
  end
end

Daemons.run_proc(File.basename($0), daemon_options) do
  server = MessagePack::RPC::Server.new
  server.listen($rpc_host, $rpc_port, WurflDevice::RpcServer.new)
  server.run
end
